
package dsmafornuesau;
import com.mxrck.autocompleter.AutoCompleterCallback;
import com.mxrck.autocompleter.TextAutoCompleter;
import java.awt.event.KeyEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Ruben Esau
 */

public class Sucursales extends javax.swing.JFrame {
    /**
     * Creates new form Sucursales
     */
    TextAutoCompleter autocompleta;
    Connection Con;
    Statement St;
    ResultSet Rs;
    static int x=0;
    public Sucursales() {
        initComponents();
        setLocationRelativeTo(null);
        getContentPane().setBackground(new java.awt.Color(255,255,255));
        setResizable(false);
        autocompleta = new TextAutoCompleter(busqueda, new AutoCompleterCallback() {  
        public void callback(Object selectedItem) {        
                consultar((String)selectedItem);
            }
          });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        consultar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        nom = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        busqueda = new javax.swing.JTextField();
        combobusqueda = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jTable1.setAutoCreateRowSorter(true);
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID", "Nombre"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jTable1.setEnabled(false);
        jTable1.getTableHeader().setReorderingAllowed(false);
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBackground(java.awt.SystemColor.activeCaptionBorder);

        jButton1.setText("Agregar Sucursal");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        consultar.setText("Consultar Sucursal");
        consultar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                consultarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar Sucursal");
        modificar.setEnabled(false);
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar Sucursal");
        eliminar.setEnabled(false);
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        jButton5.setText("Regresar");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Gestionar Sucursales");

        jButton2.setText("Limpiar Campos");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(consultar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(modificar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(eliminar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(29, 29, 29)
                .addComponent(jButton1)
                .addGap(26, 26, 26)
                .addComponent(consultar)
                .addGap(18, 18, 18)
                .addComponent(modificar)
                .addGap(18, 18, 18)
                .addComponent(eliminar)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 59, Short.MAX_VALUE)
                .addComponent(jButton5)
                .addGap(26, 26, 26))
        );

        id.setEnabled(false);

        jLabel3.setText("Nombre:");

        nom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nomActionPerformed(evt);
            }
        });
        nom.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                nomKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nomKeyTyped(evt);
            }
        });

        jLabel4.setText("Buscar:");

        busqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                busquedaActionPerformed(evt);
            }
        });
        busqueda.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                busquedaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                busquedaKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                busquedaKeyTyped(evt);
            }
        });

        combobusqueda.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Nombre", "ID" }));
        combobusqueda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combobusquedaActionPerformed(evt);
            }
        });

        jLabel2.setText("ID:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 566, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(busqueda)
                            .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 138, Short.MAX_VALUE))
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(combobusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(43, 43, 43)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(busqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(combobusqueda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(nom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
             if(nom.getText().isEmpty())
      {
          JOptionPane.showMessageDialog(null,"Campos Vacios");
      }
      else{
          
      Object [] opciones ={"Aceptar","Cancelar"};
      int eleccion = JOptionPane.showOptionDialog(rootPane,"Estas seguro de eliminar este registro","Mensaje de Confirmacion",
      JOptionPane.YES_NO_OPTION,
      JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
      if(eleccion == JOptionPane.YES_OPTION)
     {
     try{
     Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
     St=Con.createStatement();
     String query="CALL EliminarSuc('"+Integer.parseInt(id.getText())+"');";
     St.executeUpdate(query);
     St.close();
     Con.close();
     cargardatosTabla("select * from Sucursal");
     nom.setText("");
     id.setText("");
     busqueda.setText("");
     modificar.setEnabled(false);
     eliminar.setEnabled(false);
     autocompleta.removeAllItems();
     autocompletaDatos();
              } catch (Exception e){JOptionPane.showMessageDialog(null,e);}
    }              
}
    }//GEN-LAST:event_eliminarActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        new ControlPanel().setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if(nom.getText().isEmpty())
      {
          JOptionPane.showMessageDialog(null,"Campos Vacios");
      }
      else{
        Object [] opciones ={"Aceptar","Cancelar"};
      int eleccion = JOptionPane.showOptionDialog(rootPane,"Estas seguro de agregar un nuevo registro","Mensaje de Confirmacion",
      JOptionPane.YES_NO_OPTION,
      JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
      if(eleccion == JOptionPane.YES_OPTION)
     {
     try{
         String nomb=nom.getText();
     Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
     St=Con.createStatement();
      Rs = St.executeQuery("SELECT nom_suc FROM Sucursal WHERE nom_suc ='"+nomb+"'");
        if(Rs.last()){
            //Existe
            JOptionPane.showMessageDialog(null,"Ya existe un registro con ese nombre");
        }
        else{
            //No Existe
        String query="CALL NuevaSuc('"+nom.getText()+"');";
        St.executeUpdate(query);
        JOptionPane.showMessageDialog(null,"Registro agregado exitosamente");
        cargardatosTabla("select * from Sucursal");
        autocompleta.addItem(nom);
        nom.setText("");
        id.setText("");
        busqueda.setText("");
             
     if(modificar.isEnabled() && eliminar.isEnabled())
     {
         modificar.setEnabled(false);
         eliminar.setEnabled(false);
     }
        }
     St.close();
     Rs.close();
     Con.close();
     autocompleta.removeAllItems();
     autocompletaDatos();
              } catch (Exception e){JOptionPane.showMessageDialog(null,e);}
    } 
           }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        // TODO add your handling code here:
           if(nom.getText().isEmpty())
      {
          JOptionPane.showMessageDialog(null,"Campos Vacios");
      }
      else{
         
Object [] opciones ={"Aceptar","Cancelar"};
      int eleccion = JOptionPane.showOptionDialog(rootPane,"Estas seguro de modificar este registro","Mensaje de Confirmacion",
      JOptionPane.YES_NO_OPTION,
      JOptionPane.QUESTION_MESSAGE,null,opciones,"Aceptar");
      if(eleccion == JOptionPane.YES_OPTION)
     {
     try{
     Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
     St=Con.createStatement();
     //String query="update Sucursal set nom_suc='"+nom.getText()+"' where ID_Suc='"+Integer.parseInt(id.getText())+"';";
     String query="CALL ModiSuc('"+nom.getText()+"','"+Integer.parseInt(id.getText())+"');";
     St.executeUpdate(query);
     St.close();
     Con.close();
     cargardatosTabla("select * from Sucursal");
     nom.setText("");
     id.setText("");
     JOptionPane.showMessageDialog(null,"Registro modificado exitosamente");
     modificar.setEnabled(false);
     eliminar.setEnabled(false);
     autocompleta.removeAllItems();
     autocompletaDatos();
              } catch (Exception e){JOptionPane.showMessageDialog(null,e);}
    } 
           }
    }//GEN-LAST:event_modificarActionPerformed

    private void consultarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_consultarActionPerformed
        String parametro=busqueda.getText();
        consultar(parametro);
    }//GEN-LAST:event_consultarActionPerformed

    public void consultar(String parametro){
      if(parametro.isEmpty())
        {JOptionPane.showMessageDialog(null,"Campo de busqueda vacio");}
        else{
         try{         
            Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
            St=Con.createStatement();
            String query="";
            
           boolean existe;          
           if(combobusqueda.getSelectedItem()=="Nombre"){    
             Rs = St.executeQuery("CALL SucNom('"+parametro+"');");
           }                   
           else if(combobusqueda.getSelectedItem()=="ID"){
             parametro=quitaEspacios(parametro);
             Rs = St.executeQuery("CALL BuscarSuc("+Integer.parseInt(parametro)+");");          
           }
                           
                                     
                 //a continuacion nos damos cuenta si existe o no
                  if(Rs.last()){existe=true;}
                  else{                
                    JOptionPane.showMessageDialog(null,"No existe el registro");
                    existe=false;
                  }
                                   
                  if(existe==true){
                       if(combobusqueda.getSelectedItem()=="ID"){ //busqueda por id   
                        //query="Select * FROM Sucursal where ID_Suc='"+Integer.parseInt(parametro)+"';";
                          query="CALL BuscarSuc("+Integer.parseInt(parametro)+");";
                        }
                       else if(combobusqueda.getSelectedItem()=="Nombre") //busqueda por nombre
                        {     
                         //query="Select * FROM Sucursal where nom_suc='"+parametro+"';";
                          query="CALL SucNom('"+parametro+"');";
                        }
                        Rs=St.executeQuery(query);
                        cargardatos();
                        modificar.setEnabled(true);
                        eliminar.setEnabled(true);
                        busqueda.setText("");
                  }
     
                St.close();
                Rs.close();
                Con.close();              
              } catch (Exception e){JOptionPane.showMessageDialog(null,e);}   
        }
    }
    
     public String quitaEspacios(String texto) {
        java.util.StringTokenizer tokens = new java.util.StringTokenizer(texto);
        StringBuilder buff = new StringBuilder();
        while (tokens.hasMoreTokens()) {
            buff.append(" ").append(tokens.nextToken());
        }
        return buff.toString().trim();
    }
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
     cargardatosTabla("select * from Sucursal");
     autocompletaDatos();
    }//GEN-LAST:event_formWindowOpened

    private void combobusquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combobusquedaActionPerformed
        // TODO add your handling code here:
        x=combobusqueda.getSelectedIndex();
        if(x==0 || x==1)
        {
            busqueda.setText("");
            cargardatosTabla("select * from Sucursal");
        }
        autocompleta.removeAllItems();
        autocompletaDatos();
    }//GEN-LAST:event_combobusquedaActionPerformed

    private void busquedaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_busquedaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_busquedaActionPerformed

    private void busquedaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaKeyReleased
       
    }//GEN-LAST:event_busquedaKeyReleased

    private void nomKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomKeyReleased

        
    }//GEN-LAST:event_nomKeyReleased

    private void nomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nomActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nomActionPerformed

    private void busquedaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaKeyPressed

    }//GEN-LAST:event_busquedaKeyPressed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
     nom.setText("");
     id.setText("");
     busqueda.setText("");
          if(modificar.isEnabled() && eliminar.isEnabled())
     {
         modificar.setEnabled(false);
         eliminar.setEnabled(false);
     }
          cargardatosTabla("select * from Sucursal");
    }//GEN-LAST:event_jButton2ActionPerformed

    private void nomKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nomKeyTyped
        String nombre=nom.getText();
          char k=evt.getKeyChar();
         if(Character.isLetter(k)||k=='.'||k==' '){
          if(nombre.length()>0){          
            if(nombre.charAt(nombre.length()-1)=='.'&&k!=' '){
            getToolkit().beep();
            evt.consume();
           }
           else if(nombre.charAt(nombre.length()-1)==' '&&(k==' '||k=='.')){
            getToolkit().beep();
            evt.consume();
           }
            else if(nombre.length()==22){
              getToolkit().beep();
              evt.consume();
            }  
          }
          else if(nombre.isEmpty()){
            if(k==' '||k=='.'){
              getToolkit().beep();
              evt.consume();  
            }
          }                 
         }else{
              //getToolkit().beep();
              evt.consume();  
         }         
         if(nombre.contains(".")&&k=='.'){
              getToolkit().beep();
              evt.consume();
          }
    }//GEN-LAST:event_nomKeyTyped

    private void busquedaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_busquedaKeyTyped
        if(combobusqueda.getSelectedItem()=="Nombre"){
         String nombre=busqueda.getText();
          char k=evt.getKeyChar();
         if(Character.isLetter(k)||k=='.'||k==' '){
          if(nombre.length()>0){          
            if(nombre.charAt(nombre.length()-1)=='.'&&k!=' '){
            getToolkit().beep();
            evt.consume();
           }
           else if(nombre.charAt(nombre.length()-1)==' '&&(k==' '||k=='.')){
            getToolkit().beep();
            evt.consume();
           }
            else if(nombre.length()==22){
              getToolkit().beep();
              evt.consume();
            }  
          }
          else if(nombre.isEmpty()){
            if(k==' '||k=='.'){
              getToolkit().beep();
              evt.consume();  
            }
          }                 
         }else{
              //getToolkit().beep();
              evt.consume();  
         } 
         
         if(nombre.contains(".")&&k=='.'){
              getToolkit().beep();
              evt.consume();
          }
      }
      else if(combobusqueda.getSelectedItem()=="ID"){
        char k=evt.getKeyChar();
        String ID=busqueda.getText();        
        if(Character.isDigit(k)){
           if(ID.length()>0){          
             if(ID.length()==10){
              //getToolkit().beep();
              evt.consume();
             }
            }
         }               
        else{
          evt.consume();
        }//else
      }
    }//GEN-LAST:event_busquedaKeyTyped

    public void cargardatos(){
         try {
            while(Rs.next()){
            id.setText(Rs.getString(1));
            nom.setText(Rs.getString(2));}           
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,"Error"+e);
        }
         
    }
    
        public void cargardatosTabla(String consulta){
         try {
             DefaultTableModel tabla=new DefaultTableModel();
             tabla.setColumnIdentifiers(new Object[]{"ID","Nombre"});
             Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
             St=Con.createStatement();
             Rs=St.executeQuery(consulta);
             int i=0;
             while(Rs.next()){
             tabla.addRow(new Object[]{Rs.getString(1),Rs.getString(2)});
                             } 
             jTable1.setModel(tabla);
             Con.close();
             St.close();
         }
             catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }   
    }
        public void autocompletaDatos()
        {
            //autocompleta= new TextAutoCompleter(busqueda);
            try{
     Con=DriverManager.getConnection(Globales.Url,Globales.User,Globales.Pass);
     St=Con.createStatement();
     Rs=St.executeQuery("select * from sucursal");
     while(Rs.next()){
     if(x==1){
         autocompleta.addItem(Rs.getString(1)+" ");
     }
     else
         autocompleta.addItem(Rs.getString(2));
     }
            St.close();
            Rs.close();
            Con.close();
                  } catch (Exception e){JOptionPane.showMessageDialog(null,e);}
            } 
        
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sucursales.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Sucursales().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField busqueda;
    private javax.swing.JComboBox<String> combobusqueda;
    private javax.swing.JButton consultar;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField id;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JButton modificar;
    private javax.swing.JTextField nom;
    // End of variables declaration//GEN-END:variables
}
